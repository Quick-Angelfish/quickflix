{"version":3,"sources":["assets/NoPoster.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Components/Tabs.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Collections/CollectionsPresenter.js","Routes/Collections/index.js","Routes/Collections/CollectionsContainer.js","Components/Router.js","Components/GlobleStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","ImgURL","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","upComing","popular","error","loading","map","movie","key","poster_path","original_title","vote_average","release_date","Error","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_reponse","term","query","encodeURIComponent","tvApi","colApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","withRouter","pathname","location","List","Item","current","SLink","ul","Header","header","li","Link","TabItem","button","ItemContainer","Paragraph","p","Anchor","SeasonContainer","useData","objectsArray","useState","video","setVideo","product","setProduct","season","setSeason","page","setPage","useEffect","name","allData","Tabs","pop","item","index","onClick","items","href","rel","type","origin_country","Backdrop","bgImage","Content","Cover","Data","h3","Divider","Overview","DetailPresenter","result","dataObj","backdrop_path","runtime","episode_run_time","genres","genre","imdb_id","belongs_to_collection","overview","DetailContainer","includes","match","push","history","parsedID","Number","isNaN","videos","seasons","production_companies","console","log","MovieContainer","CollectionsPresenter","parts","CollectionsContainer","path","exact","component","Home","TV","Search","Detail","Collections","from","globalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75f3fd8a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/NoPoster.4741e5e4.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n`;\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  propTypes: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 28px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      ⏰\r\n    </span>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${props => props.color};\r\n`;\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: 0.2s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  bottom: 5px;\r\n  right: 5px;\r\n  opacity: 0;\r\n  transition: 0.2s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, ImgURL, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            ImgURL\r\n              ? `https://image.tmdb.org/t/p/w300${ImgURL}`\r\n              : require(\"../assets/NoPoster.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imgURL: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upComing, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | QuickFlix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title={\"Now Playing\"}>\r\n            {nowPlaying.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                ImgURL={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {upComing && upComing.length > 0 && (\r\n          <Section title={\"Upcoming Movies\"}>\r\n            {upComing.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                ImgURL={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title={\"Popular Movies\"}>\r\n            {popular.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                ImgURL={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {Error !== null && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upComing: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"561f1457a0e25d9226fbb5010382099b\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upComing: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_reponse: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n  getVideos: (id) => api.get(`movie/${id}/videos`),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) =>\r\n    api.get(`tv/${id}`, {\r\n      params: {\r\n        append_to_reponse: \"show\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n  getVideos: (id) => api.get(`tv/${id}/videos`),\r\n  getSeasons: (id, epi_num) => api.get(`tv/${id}/season/${epi_num}`),\r\n};\r\n\r\nexport const colApi = {\r\n  collections: (id) => api.get(`/collection/${id}`),\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upComing: null,\r\n    popular: null,\r\n    error: \"\",\r\n    loading: true\r\n  };\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying }\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upComing }\r\n      } = await moviesApi.upComing();\r\n      const {\r\n        data: { results: popular }\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upComing,\r\n        popular\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movies information\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upComing={upComing}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TV | QuickFlix</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <Container>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                ImgURL={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                isMovie={false}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                ImgURL={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                isMovie={false}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"Today's airing shows\">\r\n            {airingToday.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                ImgURL={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                isMovie={false}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {Error && <Message color=\"#e74c3c\" text={error} />}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\nimport { tvApi } from \"api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    error: \"\",\r\n    loading: true\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated }\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular }\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday }\r\n      } = await tvApi.airingToday();\r\n      this.setState({\r\n        topRated,\r\n        popular,\r\n        airingToday\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information\"\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, error, loading } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  error,\r\n  loading,\r\n  handleSubmit,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n    <Helmet>\r\n      <title>Search | QuickFlix</title>\r\n    </Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                ImgURL={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                ImgURL={show.poster_path}\r\n                title={show.original_name}\r\n                rating={show.vote_average}\r\n                isMovie={false}\r\n                year={\r\n                  show.first_air_date && show.first_air_date.substring(0, 4)\r\n                }\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {Error && <Message color=\"#e74c3c\" text={error} />}\r\n        {tvResults &&\r\n          movieResults &&\r\n          tvResults.length === 0 &&\r\n          movieResults.length === 0 && (\r\n            <Message text=\"Not found :(\" color=\"95a5a6\" />\r\n          )}\r\n      </>\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","import React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: \"\"\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    this.setState({\r\n      searchTerm: value\r\n    });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults }\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults }\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        loading={loading}\r\n        error={error}\r\n        searchTerm={searchTerm}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\" ? true : false}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\" ? true : false}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\" ? true : false}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 1);\r\n  background-color: rgba(20, 20, 20, 1);\r\n  z-index: 3;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid\r\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TabItem = styled.button`\r\n  background-color: rgba(20, 20, 20, 0.5);\r\n  border: none;\r\n  color: white;\r\n  padding: 15px 30px;\r\n  margin-left: 20px;\r\n  border-radius: 5px 5px 0px 0px;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  background-color: rgba(20, 20, 20, 0.5);\r\n  margin-left: 20px;\r\n  width: 50%;\r\n  height: 45%;\r\n  border-radius: 0px 15px 15px 15px;\r\n  overflow: auto;\r\n  font-size: 16px;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  display: block;\r\n  padding-top: 20px;\r\n  padding-left: 20px;\r\n`;\r\n\r\nconst Anchor = styled.a``;\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst SeasonContainer = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: 0.2s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst useData = (objectsArray) => {\r\n  const [video, setVideo] = useState({ data: [] });\r\n  const [product, setProduct] = useState({ data: [] });\r\n  const [season, setSeason] = useState({ data: [] });\r\n  const [page, setPage] = useState(0);\r\n  const takeData = () => {\r\n    setVideo({\r\n      name: \"Videos\",\r\n      data: objectsArray[0],\r\n    });\r\n    setProduct({\r\n      name: \"Products\",\r\n      data: objectsArray[1],\r\n    });\r\n    if (objectsArray.length === 3) {\r\n      setSeason({\r\n        name: \"Seasons\",\r\n        data: objectsArray[2],\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    takeData();\r\n  }, []);\r\n  const allData = [video, product, season];\r\n  return { allData, page, setPage };\r\n};\r\n\r\nconst Tabs = (objectsArray) => {\r\n  const { allData, page, setPage } = useData(objectsArray);\r\n  if (!allData[2].name) {\r\n    allData.pop();\r\n  }\r\n  return (\r\n    <>\r\n      {allData.map((item, index) => (\r\n        <TabItem key={index} onClick={() => setPage(index)}>\r\n          {item.name}\r\n        </TabItem>\r\n      ))}\r\n      <ItemContainer>\r\n        {page === 0 && allData[page].data.length !== 0 ? (\r\n          allData[page].data.map((items, index) => (\r\n            <Paragraph key={index}>\r\n              <Anchor\r\n                href={`https://www.youtube.com/watch?v=${items.key}`}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                Link - {items.type}\r\n              </Anchor>\r\n            </Paragraph>\r\n          ))\r\n        ) : page === 1 && allData[page].data.length !== 0 ? (\r\n          allData[page].data.map((items, index) => (\r\n            <Paragraph key={index}>\r\n              {items.name}\r\n              {items.origin_country ? `-${items.origin_country}` : null}\r\n            </Paragraph>\r\n          ))\r\n        ) : page === 2 && allData[page].data.length !== 0 ? (\r\n          <SeasonContainer>\r\n            {allData[page].data.map((item) => (\r\n              <Container>\r\n                <ImageContainer>\r\n                  <Image\r\n                    bgUrl={\r\n                      item.poster_path\r\n                        ? `https://image.tmdb.org/t/p/w300${item.poster_path}`\r\n                        : require(\"../assets/NoPoster.png\")\r\n                    }\r\n                  ></Image>\r\n                </ImageContainer>\r\n                <Title>\r\n                  {item.name.length > 18\r\n                    ? `${item.name.substring(0, 18)}...`\r\n                    : item.name}\r\n                </Title>\r\n              </Container>\r\n            ))}\r\n          </SeasonContainer>\r\n        ) : (\r\n          \"Not found :(\"\r\n        )}\r\n      </ItemContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport Message from \"../../Components/Message\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Tabs from \"../../Components/Tabs\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0px;\r\n`;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0px 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n  height: 35%;\r\n  overflow: auto;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading, dataObj }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | QuickFlix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : error ? (\r\n    <Message />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>\r\n          {result.original_title ? result.original_title : result.original_name}{\" \"}\r\n          | QuickFlix\r\n        </title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={\r\n          result.backdrop_path\r\n            ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\r\n            : null\r\n        }\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/NoPoster.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>\r\n            {result.original_title\r\n              ? result.original_title\r\n              : result.original_name}\r\n          </Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date\r\n                ? result.first_air_date.substring(0, 4)\r\n                : \"-\"}\r\n            </Item>\r\n            <Divider>⚬</Divider>\r\n            <Item>\r\n              {result.runtime\r\n                ? result.runtime\r\n                : result.episode_run_time\r\n                ? result.episode_run_time[0]\r\n                : 0}{\" \"}\r\n              minute\r\n            </Item>\r\n            <Item>\r\n              {result.genres.length !== 0 ? <Divider>⚬</Divider> : null}\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n            {result.imdb_id ? (\r\n              <>\r\n                <Divider>⚬</Divider>\r\n                <Item>\r\n                  <a\r\n                    href={`https://www.imdb.com/title/${result.imdb_id}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    <span role=\"img\" aria-label=\"IMDb Link\">\r\n                      📺\r\n                    </span>\r\n                  </a>\r\n                </Item>\r\n              </>\r\n            ) : null}\r\n            {result.belongs_to_collection ? (\r\n              <>\r\n                <Divider>⚬</Divider>\r\n                <Item>\r\n                  <Link to={`/collections/${result.belongs_to_collection.id}`}>\r\n                    <span role=\"img\" aria-label=\"Collections\">\r\n                      📖\r\n                    </span>\r\n                  </Link>\r\n                </Item>\r\n              </>\r\n            ) : null}\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n          {Tabs(dataObj)}\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  dataObj: PropTypes.array,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { moviesApi, tvApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: \"\",\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedID = Number(id);\r\n    if (isNaN(parsedID)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    let videos = null;\r\n    let seasons = null;\r\n    let dataObj = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedID));\r\n        ({\r\n          data: { results: videos },\r\n        } = await moviesApi.getVideos(parsedID));\r\n        dataObj = [videos, result.production_companies];\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedID));\r\n        ({\r\n          data: { results: videos },\r\n        } = await tvApi.getVideos(parsedID));\r\n        seasons = result.seasons;\r\n\r\n        dataObj = [videos, result.production_companies, seasons];\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result, dataObj });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading, dataObj } = this.state;\r\n    console.log(dataObj);\r\n    return (\r\n      <DetailPresenter\r\n        result={result}\r\n        error={error}\r\n        loading={loading}\r\n        dataObj={dataObj}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  line-height: 1.5;\r\n  width: 50%;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst MovieContainer = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst CollectionsPresenter = ({ result, error, loading }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | QuickFlix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : error ? (\r\n    <Message />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{result.name} | QuickFlix</title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/NoPoster.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>{result.name}</Title>\r\n          <Overview>{result.overview}</Overview>\r\n          <Title>List of Movies</Title>\r\n          <MovieContainer>\r\n            {result.parts.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                ImgURL={movie.poster_path}\r\n                title={movie.original_title}\r\n                rating={movie.vote_average}\r\n                isMovie={true}\r\n                year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </MovieContainer>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nCollectionsPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default CollectionsPresenter;\r\n","import CollectionsContainer from \"./CollectionsContainer\";\r\n\r\nexport default CollectionsContainer;\r\n","import React from \"react\";\r\nimport CollectionsPresenter from \"./CollectionsPresenter\";\r\nimport { colApi } from \"../../api\";\r\n\r\nexport default class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: null,\r\n      loading: true,\r\n      error: \"\"\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      },\r\n      history: { push }\r\n    } = this.props;\r\n    const parsedID = Number(id);\r\n    if (isNaN(parsedID)) {\r\n      return push(\"/\");\r\n    }\r\n    let result = null;\r\n    try {\r\n      ({ data: result } = await colApi.collections(parsedID));\r\n    } catch {\r\n      this.setState({ error: \"Cat't find collections :(\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n  render() {\r\n    const { result, loading, error } = this.state;\r\n    return (\r\n      <CollectionsPresenter result={result} loading={loading} error={error} />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Redirect,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Header from \"Components/Header\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Collections from \"Routes/Collections\";\r\n\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/tv\" exact component={TV} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Route path=\"/collections/:id\" component={Collections} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </>\r\n  </Router>\r\n);\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n${reset};\r\n  a {\r\n    text-decoration: none;\r\n    color: inherit;\r\n  }\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size: 12px;\r\n    background-color: rgba(20, 20, 20, 1);\r\n    color: white;\r\n    padding-top: 50px;\r\n  }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"./GlobleStyles\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./api\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}